{"version":3,"sources":["components/Post.js","App.js","index.js"],"names":["timeConverter","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","Post","post","name","text","dateCreated","Card","Body","Title","Subtitle","className","Text","App","useState","posts","setPosts","useEffect","axios","get","then","res","data","catch","err","console","log","Container","onClick","prompt","delete","Row","length","map","Col","md","lg","_id","Spinner","animation","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAEMA,EAAgB,SAACC,GACrB,IAAIC,EAAI,IAAIC,KAAKF,GAebG,EAAOF,EAAEG,cACTC,EAfS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGiBJ,EAAEK,YAOrB,OANWL,EAAEM,UAKJ,IAAMF,EAAQ,IAAMF,EAAO,IAJzBF,EAAEO,WAIoC,IAHvCP,EAAEQ,aAGiD,IAFnDR,EAAES,cAqBCC,EAfF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACNC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,YACpB,OACE,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKE,MAAN,UAAaL,IACb,cAACG,EAAA,EAAKG,SAAN,CAAeC,UAAU,kBAAzB,SACGrB,EAAcgB,KAEjB,cAACC,EAAA,EAAKK,KAAN,UAAYP,U,gDCoCLQ,MApEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAmDA,OAjDAC,qBAAU,WACRC,IACGC,IAAI,cACJC,MAAK,SAACC,GACLL,EAASK,EAAIC,SAEdC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,SA4C9B,eAACG,EAAA,EAAD,CAAWhB,UAAU,WAArB,UACE,wBAAQiB,QA1CO,WACjB,IAAIxB,EAAOyB,OAAO,mBACdxB,EAAOwB,OAAO,mBACdzB,GAAQC,GACVa,IAAMf,KAAK,mBAAoB,CAAEC,OAAMC,SAAQkB,OAAM,SAACC,GACpDC,QAAQC,IAAIF,OAqCeb,UAAU,yBAAvC,yBAGA,wBAAQiB,QAnCQ,WAClBV,IAAMf,KAAK,oBAAqB,IAAIoB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAkC/Bb,UAAU,yBAAxC,iCAGA,wBAAQiB,QAlCQ,WAClBV,IAAMY,OAAO,oBAAqB,IAAIP,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAiCjCb,UAAU,sBAAxC,8BAGA,cAACoB,EAAA,EAAD,CAAKpB,UAAU,kCAAf,SAhCEI,EACmB,IAAjBA,EAAMiB,OACD,oBAAIrB,UAAU,OAAd,+BAEAI,EAAMkB,KAAI,SAAC9B,GAAD,OACf,cAAC+B,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACE,cAAC,EAAD,CAAMjC,KAAMA,KADUA,EAAKkC,QAO/B,cAACC,EAAA,EAAD,CACE3B,UAAU,uBACV4B,UAAU,SACVC,KAAK,iBChDfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.942c31b4.chunk.js","sourcesContent":["import { Card } from \"react-bootstrap\";\n\nconst timeConverter = (UNIX_timestamp) => {\n  var a = new Date(UNIX_timestamp);\n  var months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  var year = a.getFullYear();\n  var month = months[a.getMonth()];\n  var date = a.getDate();\n  var hour = a.getHours();\n  var min = a.getMinutes();\n  var sec = a.getSeconds();\n  var time =\n    date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n  return time;\n};\n\nconst Post = ({ post }) => {\n  const { name, text, dateCreated } = post;\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>{name}</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          {timeConverter(dateCreated)}\n        </Card.Subtitle>\n        <Card.Text>{text}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Post;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Post from \"./components/Post\";\nimport { Spinner, Row, Col, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [posts, setPosts] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"/api/posts\")\n      .then((res) => {\n        setPosts(res.data);\n      })\n      .catch((err) => console.log(err));\n  });\n\n  const createPost = () => {\n    let name = prompt(\"Enter post name\");\n    let text = prompt(\"Enter post text\");\n    if (name && text) {\n      axios.post(\"api/posts/create\", { name, text }).catch((err) => {\n        console.log(err);\n      });\n    }\n  };\n\n  const RandomPosts = () => {\n    axios.post(\"/api/posts/random\", {}).catch((err) => console.log(err));\n  };\n\n  const deletePosts = () => {\n    axios.delete(\"/api/posts/delete\", {}).catch((err) => console.log(err));\n  };\n\n  const renderPosts = () => {\n    if (posts) {\n      if (posts.length === 0) {\n        return <h4 className=\"mt-4\">There is no posts</h4>;\n      } else {\n        return posts.map((post) => (\n          <Col md={6} lg={4} key={post._id}>\n            <Post post={post} />\n          </Col>\n        ));\n      }\n    } else {\n      return (\n        <Spinner\n          className=\"mt-4 d-block mx-auto\"\n          animation=\"border\"\n          role=\"status\"\n        />\n      );\n    }\n  };\n\n  return (\n    <Container className=\"App mt-4\">\n      <button onClick={createPost} className=\"btn btn-secondary mx-2\">\n        Create post\n      </button>\n      <button onClick={RandomPosts} className=\"btn btn-secondary mx-2\">\n        Create random posts\n      </button>\n      <button onClick={deletePosts} className=\"btn btn-danger mx-2\">\n        Delete all posts\n      </button>\n      <Row className=\"justify-content-center g-4 mt-4\">{renderPosts()}</Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}